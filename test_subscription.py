#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª
"""

import asyncio
import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å
sys.path.append(str(Path(__file__).parent / "src"))

from utils.subscription_checker import get_subscription_checker
from config.settings import get_settings

async def test_subscription_checker():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏."""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏...")
    
    settings = get_settings()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    print(f"üì∫ –ö–∞–Ω–∞–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏: @{settings.required_channel_username}")
    print(f"üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫ –≤–∫–ª—é—á–µ–Ω–∞: {settings.subscription_check_enabled}")
    print(f"‚è∞ TTL –∫—ç—à–∞: {settings.subscription_cache_ttl} —Å–µ–∫—É–Ω–¥")
    
    if not settings.telegram_bot_token:
        print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        return
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è subscription checker
        checker = await get_subscription_checker(settings.telegram_bot_token)
        print("‚úÖ Subscription checker –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = await checker.get_subscription_stats()
        print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ: {stats['whitelisted_users']}")
        print(f"   - –ö—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã: {stats['cached_statuses']}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–ø–∏—Å–∫–∏ (—Å –≤–∞—à–∏–º user_id)
        test_user_id = 123456789  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à user_id –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {test_user_id}...")
        
        is_subscribed = await checker.is_user_subscribed(test_user_id)
        print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {'–ø–æ–¥–ø–∏—Å–∞–Ω' if is_subscribed else '–Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω'}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
        print(f"\nüîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞...")
        is_subscribed_forced = await checker.is_user_subscribed(test_user_id, force_check=True)
        print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏: {'–ø–æ–¥–ø–∏—Å–∞–Ω' if is_subscribed_forced else '–Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω'}")
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        stats_after = await checker.get_subscription_stats()
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        print(f"   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ: {stats_after['whitelisted_users']}")
        print(f"   - –ö—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã: {stats_after['cached_statuses']}")
        
        print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫–∏...")
    print("=" * 50)
    
    # –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã
    from dotenv import load_dotenv
    load_dotenv()
    
    asyncio.run(test_subscription_checker()) 